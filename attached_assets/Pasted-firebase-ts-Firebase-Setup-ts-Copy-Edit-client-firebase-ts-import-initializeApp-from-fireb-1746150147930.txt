firebase.ts (Firebase Setup)
ts
Copy
Edit
// client/firebase.ts
import { initializeApp } from "firebase/app";
import { getAuth } from "firebase/auth";
import { getFirestore } from "firebase/firestore";

const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "mindfuel-bed97.firebaseapp.com",
  projectId: "mindfuel-bed97",
  storageBucket: "mindfuel-bed97.appspot.com",
  messagingSenderId: "767188496754",
  appId: "1:767188496754:web:5e3802512104d43c0dadeb",
};

const app = initializeApp(firebaseConfig);

export const auth = getAuth(app);
export const db = getFirestore(app);
ðŸ”¹ 2. App.tsx (Main App + Routing)
tsx
Copy
Edit
import { Switch, Route, useLocation } from "wouter";
import { auth, db } from './firebase';
import { queryClient } from "./lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";
import NotFound from "@/pages/not-found";
import Home from "@/pages/Home";
import Challenges from "@/pages/Challenges";
import AiCoach from "@/pages/AiCoach";
import Progress from "@/pages/Progress";
import Profile from "@/pages/Profile";
import Navbar from "@/components/layout/Navbar";
import BottomNavigation from "@/components/layout/BottomNavigation";

function Router() {
  const [location] = useLocation();

  return (
    <div className="h-screen flex flex-col bg-gray-950 text-white font-sans">
      <Navbar />
      <main className="flex-1 overflow-y-auto pt-16 pb-20">
        <div className="max-w-md mx-auto px-4">
          <Switch>
            <Route path="/" component={Home} />
            <Route path="/challenges" component={Challenges} />
            <Route path="/ai-coach" component={AiCoach} />
            <Route path="/progress" component={Progress} />
            <Route path="/profile" component={Profile} />
            <Route component={NotFound} />
          </Switch>
        </div>
      </main>
      <BottomNavigation currentPath={location} />
    </div>
  );
}

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <TooltipProvider>
        <Toaster />
        <Router />
      </TooltipProvider>
    </QueryClientProvider>
  );
}

export default App;
ðŸ”¹ 3. firebaseAuth.ts (Auth Utils â€“ Optional)
ts
Copy
Edit
// client/firebaseAuth.ts
import { auth } from './firebase';
import {
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
  signOut
} from "firebase/auth";

export const register = async (email: string, password: string) => {
  return createUserWithEmailAndPassword(auth, email, password);
};

export const login = async (email: string, password: string) => {
  return signInWithEmailAndPassword(auth, email, password);
};

export const logout = async () => {
  return signOut(auth);
};
ðŸ”¹ 4. firebaseFirestore.ts (Data Storage)
ts
Copy
Edit
// client/firebaseFirestore.ts
import { db } from "./firebase";
import { doc, setDoc, getDoc, collection, addDoc } from "firebase/firestore";

export const saveCheckIn = async (uid: string, data: any) => {
  await setDoc(doc(db, "checkins", uid), data, { merge: true });
};

export const logCraving = async (uid: string, cravingLevel: number) => {
  await addDoc(collection(db, "cravings"), {
    uid,
    cravingLevel,
    createdAt: new Date()
  });
};
ðŸ”¹ 5. i18n.ts (Translation Setup with i18next â€“ Optional)
ts
Copy
Edit
// client/i18n.ts
import i18n from "i18next";
import { initReactI18next } from "react-i18next";

i18n.use(initReactI18next).init({
  resources: {
    en: {
      translation: {
        welcome: "Welcome to MindFuel",
        checkIn: "How are you feeling today?",
        cravings: "Craving Intensity"
      }
    },
    es: {
      translation: {
        welcome: "Bienvenido a MindFuel",
        checkIn: "Â¿CÃ³mo te sientes hoy?",
        cravings: "Intensidad del antojo"
      }
    }
  },
  lng: "en",
  fallbackLng: "en",
  interpolation: {
    escapeValue: false
  }
});
Use with:

tsx
Copy
Edit
import { useTranslation } from "react-i18next";
const { t } = useTranslation();
<p>{t("welcome")}</p>